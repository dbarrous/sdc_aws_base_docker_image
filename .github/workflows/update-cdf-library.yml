name: Build CDF Library

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3 # Checkout the repository

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y install gfortran libncurses5-dev

      - name: Check for the latest version of CDF library
        id: check_latest_version
        run: |
          URL="https://spdf.gsfc.nasa.gov/pub/software/cdf/dist/latest/linux/"
          FILENAME=$(curl -sL "$URL" | grep -oP '(?<=href=")[^"]*dist-cdf\.tar\.gz[^"]*')

          echo "Latest CDF version: $FILENAME"
          echo cdf_url=$URL >> $GITHUB_OUTPUT
          echo cdf_filename=$FILENAME >> $GITHUB_OUTPUT
          echo latest_version=$FILENAME >> $GITHUB_OUTPUT

      - name: Download and extract CDF library
        run: |
          LATEST_VERSION="${{ steps.check_latest_version.outputs.latest_version }}"
          URL="${{ steps.check_latest_version.outputs.cdf_url }}"
          FILENAME="${{ steps.check_latest_version.outputs.cdf_filename }}"

          # Check if the current version matches the latest version
          if [ "$FILENAME" != "$LATEST_VERSION" ]; then
            echo "Updating CDF library version in Dockerfile..."
            awk -v latest_ver="$LATEST_VERSION" '/Version: cdf/{gsub(/[0-9]+\.[0-9]+(\.[0-9]+)*-dist-cdf/, latest_ver)} 1' Dockerfile > Dockerfile.updated
          else
            echo "CDF library is up to date."
            exit 0  # Exit the workflow as a success since CDF library is already up to date
          fi

          # Download and extract the latest CDF library
          wget "${URL}${FILENAME}"
          tar zxvpf "$FILENAME" && rm "$FILENAME"
      
      - name: Build CDF library
        id : build_cdf
        run: |
          FILENAME="${{ steps.check_latest_version.outputs.cdf_filename }}"
      
          # Assuming the extracted folder has the same name as the tar.gz file without the extension
          FOLDER_NAME="${FILENAME%.tar.gz}"
          cd "$FOLDER_NAME"
          make OS=linux ENV=gnu all

          echo "CDF library built successfully."
          echo folder_name=$FOLDER_NAME >> $GITHUB_OUTPUT

      - name: Install CDF library
        run: |
          FOLDER_NAME="${{ steps.build_cdf.outputs.folder_name }}"

          cd "$FOLDER_NAME"
          sudo make INSTALLDIR=~/cdf install

      - name: Zip CDF Library in home
        run: |
          cd ~/
          zip -r latest.zip cdf

      - name: Upload CDF Library
        uses: actions/upload-artifact@v2
        with:
          name: cdf
          path: ~/latest.zip
